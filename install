#!/bin/bash

#SERVER
sudo apt update -y && sudo apt upgrade -y

#Herramientas
sudo timedatectl set-timezone America/Caracas
sudo apt -y install net-tools

#INSTALAR APACHE2
sudo apt install apache2 -y

#INSTALAR PHP7.4
sudo add-apt-repository ppa:ondrej/php -y
sudo apt-get update -y

sudo apt install libapache2-mod-php7.4 php7.4 php7.4-common php7.4-fpm php7.4-mysql php7.4-xml php7.4-xmlrpc php7.4-curl php7.4-gd php7.4-imagick php7.4-dev php7.4-imap php7.4-mbstring php7.4-opcache php7.4-soap php7.4-zip php7.4-intl -y

sudo a2enmod proxy_fcgi setenvif
sudo a2enconf php7.4-fpm
sudo service apache2 restart

#INSTALAR CONECTOR CON SQL SERVER
sudo curl https://packages.microsoft.com/keys/microsoft.asc | apt-key add -
sudo curl https://packages.microsoft.com/config/ubuntu/20.04/prod.list > /etc/apt/sources.list.d/mssql-release.list

sudo apt-get update -y
sudo ACCEPT_EULA=Y apt-get install -y msodbcsql17
sudo ACCEPT_EULA=Y apt-get install -y mssql-tools
echo 'export PATH="$PATH:/opt/mssql-tools/bin"' >> ~/.bashrc
source ~/.bashrc
sudo apt-get install unixodbc-dev -y

sudo pecl config-set php_ini /etc/php/7.4/fpm/php.ini
sudo pecl install sqlsrv
sudo pecl install pdo_sqlsrv
printf "; priority=20\nextension=sqlsrv.so\n" > /etc/php/7.4/mods-available/sqlsrv.ini
printf "; priority=30\nextension=pdo_sqlsrv.so\n" > /etc/php/7.4/mods-available/pdo_sqlsrv.ini
sudo phpenmod -v 7.4 sqlsrv pdo_sqlsrv

echo "extension=odbc" >> /etc/php/7.4/fpm/php.ini
echo "extension=pdo_mysql" >> /etc/php/7.4/fpm/php.ini
echo "extension=pdo_sqlsrv" >> /etc/php/7.4/fpm/php.ini
echo "extension=pdo_odbc" >> /etc/php/7.4/fpm/php.ini
sudo systemctl restart php7.4-fpm
sudo systemctl restart apache2

#MYSQL

ROOTBD="$(tr -dc A-Z1-9 < /dev/urandom | head -c 15 | xargs)"
wget -O /etc/apt/trusted.gpg.d/php.gpg https://packages.sury.org/php/apt.gpg
sudo apt install mariadb-server -y
sudo apt -y install expect
SECURE_MYSQL=$(expect -c "
set timeout 10
spawn mysql_secure_installation
expect \"Enter current password for root (enter for none):\"
send \"\r\"
expect \"Set root password?\"
send \"y\r\"
expect \"New password:\"
send \"$ROOTBD\r\"
expect \"Re-enter new password:\"
send \"$ROOTBD\r\"
expect \"Remove anonymous users?\"
send \"y\r\"
expect \"Disallow root login remotely?\"
send \"y\r\"
expect \"Remove test database and access to it?\"
send \"y\r\"
expect \"Reload privilege tables now?\"
send \"y\r\"
expect eof
")

echo "$SECURE_MYSQL"

apt -y purge expect
mysql -u root  mysql -e "SET PASSWORD FOR 'root'@'localhost' = PASSWORD('$ROOTBD')"
mysql --user="root" --password=""  --execute="UPDATE user SET authentication_string=PASSWORD('$ROOTBD') where User='root';" mysql
mysql --user="root" --password="" --execute="UPDATE user SET plugin='mysql_native_password';" mysql
mysql -u root mysql -e "FLUSH PRIVILEGES;"
USERBD="$(tr -dc A-Z1-9 < /dev/urandom | head -c 6 | xargs)"
PASSBD="$(tr -dc A-Z1-9 < /dev/urandom | head -c 15 | xargs)"
mysql -u root -p$ROOTBD -e "DROP DATABASE IF EXISTS crm_anditel;"
mysql -u root -p$ROOTBD -e "CREATE DATABASE crm_anditel /*\!40100 DEFAULT CHARACTER SET utf8 */;"
mysql -u root -p$ROOTBD -e "CREATE USER '$USERBD@localhost' IDENTIFIED BY '$PASSBD';"
mysql -u root -p$ROOTBD -e "GRANT ALL PRIVILEGES ON crm_anditel.* TO '$USERBD'@'localhost';"
mysql -u root -p$ROOTBD mysql -e "FLUSH PRIVILEGES;"
mysql -u root -p$ROOTBD  mysql -e "SET GLOBAL group_concat_max_len = 1000000";

cat <<EOT > accessmysql.log
User: $USERBD
Pass: $PASSBD
Passroot: $ROOTBD
EOT

sudo apt install zip -y

#COMPOSER
curl -sS https://getcomposer.org/installer -o composer-setup.php
HASH=`curl -sS https://composer.github.io/installer.sig`
echo $HASH
php -r "if (hash_file('SHA384', 'composer-setup.php') === '$HASH') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"
sudo php composer-setup.php --install-dir=/usr/local/bin --filename=composer

sed -i 's/127.0.0.1/0.0.0.0/g' /etc/mysql/mariadb.conf.d/50-server.cnf
sudo systemctl restart mariadb
sudo apt-get update -y
sudo a2enmod rewrite
sudo a2dismod php7.4 
sudo systemctl restart apache2

cat << EOF > /var/www/html/info.php
<?php
phpinfo();
EOF

ufw default allow outgoing
ufw default deny incoming
sudo ufw allow 3306/tcp
sudo ufw allow 22/tcp
sudo ufw allow 2222/tcp
sudo ufw allow 80
sudo ufw allow http
sudo ufw allow https
sudo ufw allow 443
sudo ufw allow 47/tcp
sudo ufw allow 1723/tcp
sudo ufw allow 47
sudo ufw allow 1723
echo "y" | sudo ufw enable
sudo ufw reload
echo " \n"
read -rp 'Pulsa Enter para terminar y reiniciar servidor...'  key
reboot